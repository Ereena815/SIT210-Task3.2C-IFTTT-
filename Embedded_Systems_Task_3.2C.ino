#include "arduino_secrets.h"
/****
   Embedded Systems Development
   Exercise : Task 3.2C - Create IFTTT Trigger
   Name : Ereena Bagga
   Student ID : 2010993040
 ****/

/* 
  Sketch generated by the Arduino IoT Cloud Thing "Ereena"
  https://create.arduino.cc/cloud/things/7d80f1a4-0a0a-4467-982c-d3342d869ac0 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudIlluminance lightSensor;
  bool sunlight;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Arduino.h>

// Include library for BH1750 light sensor
#include <hp_BH1750.h>
hp_BH1750 sensor;

// Define LED Pin
int Led = 2;

/* put your setup code here, to run once: */
void setup() 
{
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  
  // Set the LED Pin as output
  pinMode(Led, OUTPUT);
  
  // Set the address and initialise the sensor
  sensor.begin(BH1750_TO_GROUND);
  
  // Start the first measurement
  sensor.start();
  
  Serial.println("*********************************** TASK 3.2C ************************************");
  Serial.println("***************************** CREATING IFTTT TRIGGER *****************************");

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

/* put your main code here, to run repeatedly: */
void loop() 
{
  ArduinoCloud.update();
  onLightSensorChange();
}
  
void onSunlightChange()  
{
  // Turn led on
  digitalWrite(Led,HIGH);
  // Give a delay for 2 seconds
  delay(2000);
  // Turn led off
  digitalWrite(Led,LOW);
  // Give a delay for 2 seconds
  delay(2000);
}

void onLightSensorChange()  
{
  // Check whether the sensor has value
  if (sensor.hasValue()) 
  {
    // Input light intensity
    lightSensor = sensor.getLux(); 
    
    // If light intensity is greater than 400, blink led
    if (lightSensor>400)
    {
      //  Terrarium is exposed to sunlight
      sunlight = true;
      onSunlightChange();
      // Print light intensity and sunlight value
      Serial.print("Light Intensity: ");
      Serial.print(lightSensor);
      Serial.println(", Sunlight: ON ");
    }
    
    // Else, turn led off
    else
    {
      //  Terrarium is not exposed to sunlight
      sunlight = false;
      digitalWrite(Led,LOW);
      // Print light intensity and sunlight value
      Serial.print("Light Intensity: ");
      Serial.print(lightSensor);
      Serial.println(", Sunlight: OFF ");
    }
    
    // Give a delay for 5 seconds
    delay(5000);
    
    // Start next measurement
      sensor.start(); 
  }
}
